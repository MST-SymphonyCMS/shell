<?php

	define('DOCROOT', rtrim(realpath(dirname(__FILE__) . '/../../../'), '/'));
	define('DOMAIN', NULL);	

	// Include the engine
	require_once(DOCROOT . '/symphony/lib/boot/bundle.php');
	require_once(EXTENSIONS . '/shell/lib/class.shell.php');

	// Make sure the Shell has been initialised
	Shell::instance();

	unset($argv[0]);
	
	if($argv[0] == '--usage'){
		echo "usage: symphony [-t token] extension [command] [OPTIONS]
	runs command provided via extension. 
	
	Should command be omitted, a list of commands available for that 
	extension is displayed instead. Leaving out both command and extension
	will give a list of all commands available in the system.
	
options:
	-t	authentication token. Can be enabled via Symphony author 
		profile. Not all extensions require authentication. Check
		individual extension commands for usage.

examples:
	symphony -t 4141e465 shell test

";
		
		exit();
	}
	elseif(count($argv) == 0){
		echo "Below is a list of all available commands (use --usage 
for details on executing a command):
	
";

		foreach(Shell::listCommands() as $name => $commands){
			echo "   {$name}\n   ==========\n";
			foreach($commands as $c){
				echo "      {$c}\n";
			}
			echo "\n";
		}
	
		exit;
	}
	
	$extension = $command = NULL;
	$args = array();
	$options = array();
	$inOption = false;
	
	foreach($argv as $item){
		if($item{0} == '-' && is_null($extension)){
			$inOption = true;
			$key = ltrim($item, '-');
		}
		elseif($inOption == true){
			$options[$key] = $item;
			$inOption = false;
		}
		
		elseif(is_null($extension)){
			$extension = $item;
		}
		
		elseif(is_null($command)){
			$command = $item;
		}		
		
		else{
			$args[] = $item;
		}
	}

	if(is_null($command)){
		
		echo "Below is a list of all available commands for 
the extension {$extension}. (use --usage for details on 
executing individual commands):

";

		foreach(Shell::listCommands($extension) as $c){
			echo "   {$c}\n";
		}

		echo "\n";

		exit;
	}
	
	$options = (object)$options;

	if(isset($options->t)){
		
		Shell::instance()->loginFromToken($options->t);

		if(!Shell::instance()->isLoggedIn()){
			throw new Exception('Error logging in. Authentication token supplied was invalid.');
		}		
	}
	
	$path = EXTENSIONS . '/' . $extension . '/bin/'. $command;
	if($path == __FILE__){
		throw new Exception('Cannot run "symphony" as shell command.');
	}
	
	$classname = require_once(EXTENSIONS . '/' . $extension . '/bin/'. $command);
	$obj = new $classname;
		
	if(in_array('--usage', $args)){
		echo $obj->usage() . "\n";
		exit;
	}

	$obj->run($args);

